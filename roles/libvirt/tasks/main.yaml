- block:
  - name: required variables
    debug:
      msg:
        - "nonrootuser: {{ nonrootuser }}"
        - "ansible_distribution_release: {{ ansible_distribution_release }}"

  - name: has intel virtualization
    stat:
      path: /sys/module/kvm_intel/parameters/nested
    register: intel

  - name: has amd virtualization
    stat:
      path: /sys/module/kvm_amd/parameters/nested
    register: amd

  - name: assert that nested virtualization is possible
    assert:
      that: intel.stat.exists or amd.stat.exists

  - name: enable nested virtualization for intel
    command: "{{ item }}"
    with_items:
      - modprobe -r kvm_intel
      - modprobe kvm_intel nested=1
      - echo "options kvm_intel nested=1" > /etc/modprobe.d/kvm.conf
    ignore_errors: yes
    when: intel.stat.exists

  - name: enable nested virtualization for amd
    command: "{{ item }}"
    with_items:
      - modprobe -r kvm_amd
      - modprobe kvm_amd nested=1
      - echo "options kvm_amd nested=1" > /etc/modprobe.d/kvm.conf
    ignore_errors: yes
    when: amd.stat.exists

  - name: install packages
    package:
      name:
        - g++
        - make
        - libvirt
        - libvirt-dev
        - libvirt-qemu
        - libvirt-daemon
        - libvirt-daemon-openrc
        - virt-install
      state: present

  # sudo chgrp tss /var/lib/swtpm-localca
  # sudo chmod g+rwxs /var/lib/swtpm-localca

  - name: add nonrootuser to groups
    user:
      name: "{{ nonrootuser }}"
      state: present
      groups: libvirt,kvm
      append: yes

  - name: enable virtiofs synced folder
    replace:
      path: /etc/libvirt/qemu.conf
      regexp: '^#\s*memory_backing_dir'
      replace: 'memory_backing_dir'

  - name: enable ipv4 forwarding
    lineinfile:
      dest: /etc/sysctl.conf
      regexp: '^#\s*net.ipv4.ip_forward=1.*$'
      line: 'net.ipv4.ip_forward=1'

  - name: enable ipv4 forwarding now
    shell: sysctl -w net.ipv4.ip_forward=1

  - name: service libvirtd
    service:
      name: libvirtd
      enabled: yes
      state: started

  - name: is host-bridge defined
    shell: virsh net-list | grep -q host-bridge
    failed_when: false
    register: result

  - name: create host-bridge if not defined
    shell: "{{ item }}"
    args:
      executable: /bin/bash
    with_items:
      - virsh net-define <(echo PG5ldHdvcms+CiAgICA8bmFtZT5ob3N0LWJyaWRnZTwvbmFtZT4KICAgIDxmb3J3YXJkIG1vZGU9ImJyaWRnZSIvPgogICAgPGJyaWRnZSBuYW1lPSJicjAiLz4KPC9uZXR3b3JrPg== | base64 -d) || true
      - virsh net-start host-bridge
      - virsh net-autostart host-bridge
      - virsh net-list | grep -q host-bridge
    when: result.rc != 0

  become: yes
  become_user: root
  tags:
    - libvirt

