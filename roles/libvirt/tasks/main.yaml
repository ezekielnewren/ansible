- block:
  - name: required variables
    debug:
      msg:
        - "nonrootuser: {{ nonrootuser }}"
        - "ansible_distribution_release: {{ ansible_distribution_release }}"

  - name: has intel virtualization
    stat:
      path: /sys/module/kvm_intel/parameters/nested
    register: intel

  - name: has amd virtualization
    stat:
      path: /sys/module/kvm_amd/parameters/nested
    register: amd

  - name: assert that nested virtualization is possible
    assert:
      that: intel.stat.exists or amd.stat.exists

  - name: enable nested virtualization for intel
    command: "{{ item }}"
    with_items:
      - modprobe -r kvm_intel
      - modprobe kvm_intel nested=1
      - echo "options kvm_intel nested=1" > /etc/modprobe.d/kvm.conf
    ignore_errors: yes
    when: intel.stat.exists

  - name: enable nested virtualization for amd
    command: "{{ item }}"
    with_items:
      - modprobe -r kvm_amd
      - modprobe kvm_amd nested=1
      - echo "options kvm_amd nested=1" > /etc/modprobe.d/kvm.conf
    ignore_errors: yes
    when: amd.stat.exists

  - name: install packages
    package:
      name:
        - "@development"
        - dnsmasq
        - ebtables
        - libguestfs-tools
        - libvirt-client
        - libvirt-daemon
        - libvirt-devel
        - libvirt-daemon-driver-storage-rbd
        - libxml2-devel
        - libxslt-devel
        - qemu-img
        - nbd
        - qemu-kvm
        - ruby-devel
        - swtpm
        - virt-install
        - zlib-devel
      state: present
    when:
      - ansible_facts['distribution'] == "Rocky"

  # sudo chgrp tss /var/lib/swtpm-localca
  # sudo chmod g+rwxs /var/lib/swtpm-localca

  - name: add nonrootuser to groups
    user:
      name: "{{ nonrootuser }}"
      state: present
      groups: libvirt,kvm,qemu
      append: yes

  - name: enable virtiofs synced folder
    replace:
      path: /etc/libvirt/qemu.conf
      regexp: '^#\s*memory_backing_dir'
      replace: 'memory_backing_dir'

  - include_role:
      name: ipforward

  - name: service libvirtd
    systemd:
      name: libvirtd
      enabled: yes
      state: started

  - name: 
    file:
      path: /var/lib/libvirt/images
      state: directory
      owner: root
      group: libvirt
      mode: 'g+rwxs'
      recurse: yes

  - name: copy host-bridge.xml
    copy:
      src: "host-bridge.xml"
      dest: "/var/lib/libvirt/network/"
      owner: root
      group: root
      mode: '0644'

  - name: is host-bridge defined
    shell: virsh net-list | grep -q host-bridge
    failed_when: false
    register: result

  - name: create host-bridge if not defined
    shell: "{{ item }}"
    args:
      executable: /bin/bash
    with_items:
      - virsh net-define /var/lib/libvirt/network/host-bridge.xml || true
      - virsh net-start host-bridge
      - virsh net-autostart host-bridge
      - virsh net-list | grep -q host-bridge
    when: result.rc != 0


  - name: copy fast-bridge.xml
    copy:
      src: "fast-bridge.xml"
      dest: "/var/lib/libvirt/network/"
      owner: root
      group: root
      mode: '0644'

  - name: is fast-bridge defined
    shell: virsh net-list | grep -q fast-bridge
    failed_when: false
    register: result

  - name: create fast-bridge if not defined
    shell: "{{ item }}"
    args:
      executable: /bin/bash
    with_items:
      - virsh net-define /var/lib/libvirt/network/fast-bridge.xml || true
      - virsh net-start fast-bridge
      - virsh net-autostart fast-bridge
      - virsh net-list | grep -q fast-bridge
    when: result.rc != 0


  become: yes
  become_user: root
  tags:
    - libvirt

