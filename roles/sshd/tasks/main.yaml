- block:
  - name: install curl, jq
    package:
      name:
        - curl
        - jq

  become: yes
  become_user: root
  tags:
    - sshd

- block:
  - name: required variables
    debug:
      msg:
        - "hostname: {{ hostname }}"

  - name: stat /tmp/secret.json
    stat:
      path: /tmp/secret.json
    register: secret

  - name: lookup secrets directly
    set_fact:
      SSHD_KEYS: "{{ lookup('hashivault', '{{ hostname }}', mount_point='/kv/machine', version=2) }}"
    when: secret.stat.exists == False

  - name: copy secrets to guest
    copy: content="{{ SSHD_KEYS }}" dest=/tmp/secret.json
    when: secret.stat.exists == False

  - name: check that /tmp/secret.json actually contains secrets
    command: grep "ssh" /tmp/secret.json

  tags:
    - sshd

- block:
  - name: delete existing keys
    shell: "rm /etc/ssh/ssh_host_*"

  - name: write out ssh_host_key
    shell: "jq -r .ssh.private_key /tmp/secret.json > /etc/ssh/ssh_host_key"

  - name: set ssh_host_key permissions
    file:
      path: /etc/ssh/ssh_host_key
      owner: root
      group: root
      mode: '0600'

  - name: write out ssh_host_key.cer
    shell: "jq -r .ssh.certificate /tmp/secret.json > /etc/ssh/ssh_host_key.cer"

  - name: set ssh_host_key.cer permissions
    file:
      path: /etc/ssh/ssh_host_key.cer
      owner: root
      group: root
      mode: '0644'

  - name: touch /etc/ssh/ssh_known_hosts
    file:
      dest: /etc/ssh/ssh_known_hosts
      state: touch

  - name: query the ssh_host ca certificate
    shell: "curl https://vault.test.net:8200/v1/authority/ssh_host/public_key"
    register: ssh_host_ca

  - name: write the ssh_host ca certificate to file
    lineinfile:
      path: /etc/ssh/ssh_known_hosts
      line: "@cert-authority * {{ ssh_host_ca.stdout }}"

  - name: touch /etc/ssh/ssh_config
    file:
      path: /etc/ssh/ssh_config
      state: touch

  - name: global ssh config require strict host key checking
    lineinfile:
      dest: /etc/ssh/ssh_config
      insertafter: "^Host *"
      regexp: "^# *StrictHostKeyChecking.*$"
      line: "    StrictHostKeyChecking yes"

  - name: copy sshd_config
    copy:
      src: "sshd_config"
      dest: "/etc/ssh/sshd_config"
      owner: root
      group: root
      mode: '0644'

  - stat:
      path: /etc/cloud/cloud.cfg
    register: result

  - name: do not delete ssh keys cloud init
    lineinfile:
      dest: /etc/cloud/cloud.cfg
      line: "ssh_deletekeys: false"
    when: result.stat.exists == True

  - name: ufw allow port 22
    ufw:
      rule: allow
      port: '22'
      proto: tcp
    when: ansible_facts["os_family"] == "Debian"

  - name: firewalld allow port 22
    firewalld:
      service: ssh
      permanent: yes
      state: enabled
    when: ansible_facts["os_family"] == "RedHat"

  become: yes
  become_user: root
  tags:
    - sshd

