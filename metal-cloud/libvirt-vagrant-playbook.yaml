---
- hosts: all
  become: true
  pre_tasks:
    - name: minimum ansible version
      vars:
        minver: "2.9.27"
      assert:
        that: "ansible_version.full is version_compare('{{ minver }}', '>=')"
        msg: "You must update Ansible to at least {{ minver }} to use this version of Drupal VM."
    - name: required variables
      debug:
        msg:
          - "nonrootuser: {{ nonrootuser }}"
          - "ansible_distribution_release: {{ ansible_distribution_release }}"
  tasks:
    - name: intel virtualization
      stat:
        path: /sys/module/kvm_intel/parameters/nested
      register: intel
      tags: nested virtualization
    
    - name: amd virtualization
      stat:
        path: /sys/module/kvm_amd/parameters/nested
      register: amd
      tags: nested virtualization
    
    - name: enable nested virtualization for intel
      command: "{{ item }}"
      with_items:
        - modprobe -r kvm_intel
        - modprobe kvm_intel nested=1
        - echo "options kvm_intel nested=1" > /etc/modprobe.d/kvm.conf
      ignore_errors: yes
      when: intel.stat.exists
      tags: nested virtualization

    - name: enable nested virtualization for amd
      command: "{{ item }}"
      with_items:
        - modprobe -r kvm_amd
        - modprobe kvm_amd nested=1
        - echo "options kvm_amd nested=1" > /etc/modprobe.d/kvm.conf
      ignore_errors: yes
      when: amd.stat.exists
      tags: nested virtualization

    - name: update and upgrade
      apt:
        update_cache: yes
        upgrade: yes

    - name: add apt keys
      apt_key:
        url: https://apt.releases.hashicorp.com/gpg
        id: E8A032E094D8EB4EA189D270DA418C88A3219F7B
        state: present

    - name: packages
      package:
        name:
          - build-essential
          - dnsmasq-base
          - ebtables
          - libguestfs-tools
          - libvirt-clients
          - libvirt-daemon-system
          - libvirt-dev
          - libxml2-dev
          - libxslt-dev
          - qemu
          - qemu-kvm
          - ruby-dev
          - virtinst
          - zlib1g-dev
        state: present

    - name: add hashicorp repo
      apt_repository:
        repo: "deb [arch=amd64] https://apt.releases.hashicorp.com {{ ansible_distribution_release }} main"
        update_cache: yes
        state: present

    - name: install vagrant
      package:
        name: vagrant
        state: present

    - name: add swtpm repo
      apt_repository:
        repo: ppa:thopiekar/swtpm
        update_cache: yes
        state: present

    - name: install swtpm
      package:
        name: swtpm
        state: present


    - name: post install
      command: "{{ item }}"
      with_items:
        - usermod -aG libvirt {{ nonrootuser }}
        - usermod -aG kvm {{ nonrootuser }}
        - systemctl enable libvirtd
        - systemctl start libvirtd
        ## enable virtiofs synced folder
        - sed -i 's/# *memory_backing_dir/memory_backing_dir/g' /etc/libvirt/qemu.conf
        - vagrant plugin install vagrant-libvirt vagrant-reload

    - name: enable ipv4 forwarding
      lineinfile:
        dest: /etc/sysctl.conf
        regexp: '^#\s*net.ipv4.ip_forward=1.*$'
        line: 'net.ipv4.ip_forward=1'

    - name: enable ipv4 forwarding now
      shell: sysctl -w net.ipv4.ip_forward=1

    - name: create host-bridge
      shell: "{{ item }}"
      with_items:
        - virsh net-define <(echo PG5ldHdvcms+CiAgICA8bmFtZT5ob3N0LWJyaWRnZTwvbmFtZT4KICAgIDxmb3J3YXJkIG1vZGU9ImJyaWRnZSIvPgogICAgPGJyaWRnZSBuYW1lPSJicjAiLz4KPC9uZXR3b3JrPg== | base64 -d)
        - virsh net-start host-bridge
        - virsh net-autostart host-bridge
        - virsh net-list | grep -q host-bridge
      args:
        executable: /bin/bash

































